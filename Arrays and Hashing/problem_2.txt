// for counting character in string
unordered_map<char,int> map1;
string s ="jam";
for(const char& i: s)
{
   map1[i]++;
}
// for counting words in a vector of string
unordered_map<string,int> map1;
vector<string> st1;
for(const string& word: st1)
{
   map1[word]++;
}

#unordered_map doesn't store the same key value 

=> to find pair in the map
 unordered_map<int, int> seen; 

for (int i = 0; i < nums.size(); i++) {
        int complement = target - nums[i];

        if (seen.count(complement)) {
            int j = seen[complement];
            cout << min(i, j) << " " << max(i, j) << endl;
            break;
        }

        // store current value and index
        seen[nums[i]] = i;
    }

nums = {2,4,5} t = 7;

 i=0; c = 7-nums[0]= 7-2 = 5; if(seen(5)=> false)
 seen[nums[0]] = i; seen[2]=0;

 i=1; c= 7- nums[1]=7-4 = 3; if(seen(3)=> false)
 seen[nums[1]]=i; seen[4]=1;

 i=2; c= 7 - nums[2]= 7 - 5 =2; if(seen(2)=> true)
 int j=seen[c]; j = seen[2] =0; int i = 2;
 [j, i]=[0,2]
